{"version":3,"sources":["componets/Title.js","config/omdb.js","componets/SearchForm.js","componets/Movie.js","componets/MovieList.js","pages/Home.js","componets/ButtonBackToHome.js","pages/Detail.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Title","_ref","children","react_default","a","createElement","className","OMDB_CONFIG","API_KEY","SearchForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inputMovie","_handleChange","e","setState","target","value","_handleSubmit","preventDefault","fetch","then","response","json","results","_results$Search","Search","totalResults","props","onResults","inherits","createClass","key","onSubmit","type","placeholder","onChange","Component","Movie","_this$props","id","poster","title","year","Link","to","src","alt","MovieList","movies","map","movie","imdbID","Movie_Movie","Year","Poster","Home","usedSearch","_handleResults","MovieList_MovieList","Title_Title","SearchForm_SearchForm","_renderResults","ButtonBackToHome","Detail","_this2","OMDB_CONGIG","console","log","catch","error","window","history","back","match","params","_fetchMovie","_this$state$movie","Actors","Director","Metascore","Plot","Writer","ButtonBackToHome_ButtonBackToHome","NotFound","App","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb5a75d7.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Title = ({children}) => (\n  <h1 className=\"title\">{children}</h1>\n);\n","const OMDB_CONFIG = {\n  API_KEY: '3aaf6bc6',\n}\n\nexport default OMDB_CONFIG;\n","import React, { Component } from 'react';\nimport OMDB_CONFIG from '../config/omdb';\n\nexport class SearchForm extends Component {\n  state = {\n    inputMovie: '',\n  }\n\n  _handleChange = (e) => {\n    this.setState({ inputMovie: e.target.value })\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n    const { inputMovie } = this.state;\n    fetch(`http://www.omdbapi.com/?apikey=${OMDB_CONFIG.API_KEY}&s=${inputMovie}`)\n      .then((response) => response.json())\n      .then((results) => {\n        const { Search = [], totalResults = \"0\" } = results;\n        this.props.onResults(Search);\n      });\n  }\n\n  render () {\n    return (\n      <form onSubmit={this._handleSubmit}>\n        <div className=\"field has-addons\">\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Type a movie\"\n              onChange={this._handleChange}\n            />\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-info\">\n              Search\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  };\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport class Movie extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    title: PropTypes.string,\n    year: PropTypes.string,\n    poster: PropTypes.string,\n  }\n\n  render () {\n    const { id, poster, title, year } = this.props;\n\n    return (\n      <Link to={`/detail/${id}`} className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={poster}\n              alt={title}\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-content\">\n              <p className=\"title is-4\">{title}</p>\n              <p className=\"subtitle is-6\">{year}</p>\n            </div>\n          </div>\n        </div>\n      </Link>\n    );\n  };\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Movie } from './Movie';\n\nexport class MovieList extends Component {\n  static propTypes = {\n    movies: PropTypes.array,\n  };\n  render() {\n    const { movies } = this.props;\n    return (\n      <div className=\"movieList\">\n        {\n          movies.map(movie => {\n            return (\n              <div key={movie.imdbID} className=\"movieList-item\">\n                <Movie\n                  id={movie.imdbID}\n                  key={movie.imdbID}\n                  title={movie.Title}\n                  year={movie.Year}\n                  poster={movie.Poster}\n                />\n              </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n};\n","import React, { Component } from 'react'\nimport { Title } from '../componets/Title';\nimport { SearchForm } from '../componets/SearchForm';\nimport { MovieList } from '../componets/MovieList';\n\nexport class Home extends Component {\n  state = {\n    results: [],\n    usedSearch: false,\n  }\n\n  _handleResults = (results) => {\n    this.setState({\n      results,\n      usedSearch: true,\n    })\n  }\n\n  _renderResults () {\n    return this.state.results.length === 0\n      ? <p>Sorry, but we have not found any results! 😥</p>\n      : <MovieList movies={this.state.results} />\n  }\n  render() {\n    return (\n      <div>\n        <Title>Search Movies</Title>\n        <div className=\"SearchForm-wrapper\">\n          <SearchForm onResults={this._handleResults} />\n        </div>\n        {this.state.usedSearch\n          ? this._renderResults()\n          : <small>Has not done any search yet.</small>\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonBackToHome = () => (\n  <Link className='button is-info' to='/'>\n    Back\n  </Link>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport OMDB_CONGIG from '../config/omdb';\nimport { ButtonBackToHome } from '../componets/ButtonBackToHome';\n\nexport class Detail extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.object,\n      isExact: PropTypes.bool,\n      path: PropTypes.string,\n      url: PropTypes.string,\n    }),\n  }\n\n  state = {\n    movie: {}\n  }\n\n  _fetchMovie ({id}) {\n    fetch(`http://www.omdbapi.com/?apikey=${OMDB_CONGIG.API_KEY}&i=${id}`)\n      .then((response) => response.json())\n      .then((movie) => {\n        console.log(movie)\n        this.setState({ movie })\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  _goBack () {\n    window.history.back();\n  }\n\n  componentDidMount () {\n    console.log(this.props);\n    const { id } = this.props.match.params;\n    this._fetchMovie({ id });\n  }\n\n  render() {\n    const {\n      Title, Poster,\n      Actors, Director,\n      Metascore, Year,\n      Plot, Writer,\n    } = this.state.movie;\n    return (\n      <div>\n        <ButtonBackToHome />\n        <h1>{Title}</h1>\n        <img src={Poster} alt={Title}/>\n        <h4>{Year}</h4>\n        <h3>{Actors}</h3>\n        <h3>{Director || Writer}</h3>\n        <span>{Metascore}</span>\n        <p>{Plot}</p>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { ButtonBackToHome } from '../componets/ButtonBackToHome';\n\nexport const NotFound = () => (\n  <div className=\"page404\">\n    <h1 className=\"sorry\">Sorry this page does not exist!...</h1>\n    <ButtonBackToHome />\n  </div>\n)\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { Detail } from './pages/Detail';\nimport { NotFound } from './pages/NotFound';\n\nimport './App.css';\nimport 'bulma/css/bulma.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/detail/:id' component={Detail} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}